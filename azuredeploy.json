{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePostfix": {
      "type":"string",
      "maxLength":5,
      "defaultValue":""
    },
    "apimsku": {
      "type": "string",
      "defaultValue": "Developer"
    },
    "apimcapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "apimEmail": {
      "type": "string",
      "defaultValue": "bwatts@microsoft.com"
    },
    "appgwtier": {
      "type": "string",
      "defaultValue": "WAF_v2"
    },
    "appgwskuSize": {
        "type": "string",
        "defaultValue": "WAF_v2"
    },
    "appgwcapacity": {
        "type": "int",
        "defaultValue": 2
    },
    "appgwzones": {
        "type": "array",
        "defaultValue": [
                "1",
                "2",
                "3"
        ]
    },
    "appgwsku": {
        "type": "string",
        "defaultValue": "Standard"
    },
    "appgwpublicIpZones": {
        "type": "array",
        "defaultValue": []
    },
    "appgwautoScaleMaxCapacity": {
        "type": "int",
        "defaultValue": 4
    },
    "jumpSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "jumpAdmin"
    },
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "ABCabc1234"
    },
    "jumpSKU": {
      "type": "string",
      "defaultValue": "2019-Datacenter"
    },
    "dnsPrefix": {
        "type": "string",
        "defaultValue": "wbaksprivate-dns"
    },
    "kubernetesVersion": {
        "type": "string",
        "defaultValue": "1.15.11"
    },
    "networkPlugin": {
        "type": "string",
        "defaultValue": "kubenet"
    },
    "enableRBAC": {
        "type": "bool",
        "defaultValue": true
    },
    "vmssNodePool": {
        "type": "bool",
        "defaultValue": true
    },
    "windowsProfile": {
        "type": "bool",
        "defaultValue": false
    },
    "enablePrivateCluster": {
        "type": "bool",
        "defaultValue": true
    },
    "enableHttpApplicationRouting": {
        "type": "bool",
        "defaultValue": true
    },
    "networkPolicy": {
        "type": "string",
        "defaultValue": "calico"
    },
    "isZoneRedundant": {
        "type": "bool",
        "defaultValue": true
    }
  },
  "variables": {
    "gitUri": "https://raw.githubusercontent.com/bwatts64/templates//karlspellshisnamecorrect",
    "deployVNETTemplateURL": "[concat(variables('gitUri'),'/VNet.json')]",
    "deployAppInsightsTemplateURL": "[concat(variables('gitUri'),'/ApplicationInsights.json')]",
    "deployAPIMTemplateURL": "[concat(variables('gitUri'),'/APIM.json')]",
    "deployAPPGWTemplateURL": "[concat(variables('gitUri'),'/AppGW.json')]",
    "deployAzureBastionTemplateURL": "[concat(variables('gitUri'),'/AzureBastion.json')]",
    "deployWindowsServerTemplateURL": "[concat(variables('gitUri'),'/WindowsVirtualMachine.json')]",
    "deployDNSZoneTemplateURL": "[concat(variables('gitUri'),'/PrivateDNSZone.json')]",
    "deployLogAnalyticsURL": "[concat(variables('gitUri'),'/Log_Analytics_Workspace.json')]",
    "deployPrivateEndpointURL": "[concat(variables('gitUri'),'/PrivateEndpoint.json')]",
    "getNICIPURL": "[concat(variables('gitUri'),'/GetNicIP.json')]",
    "deployKeyVaultURL": "[concat(variables('gitUri'),'/KeyVault.json')]",
    "deployACRURL": "[concat(variables('gitUri'),'/ACR.json')]",
    "addVMInsightsURL": "[concat(variables('gitUri'),'/EnableVMInsights.json')]",
    "deployServiceBusURL": "[concat(variables('gitUri'),'/ServiceBus.json')]",
    "deployAzureCacheBusURL": "[concat(variables('gitUri'),'/AzureRedisCache.json')]",
    "deployAzureAKSTemplateURL": "[concat(variables('gitUri'),'/PrivateAKSMICluster.json')]",
    "deployAzureCosmosDbURL": "[concat(variables('gitUri'),'/CosmosDb.json')]",
    "deployAzureSqlDbURL": "[concat(variables('gitUri'),'/SQLDB.json')]",
    "workspaceName": "[concat('pocmonitor-',uniqueString(resourceGroup().id))]",
    "addressRange":"192.168.1.0/24",
    "apimRange":"192.168.1.224/28",
    "aksRange":"192.168.1.0/25",
    "privateEPRange":"192.168.1.176/28",
    "sharedRange":"192.168.1.160/28",
    "bastionRange":"192.168.1.128/28",
    "appgwRange":"192.168.1.144/28",
    "appgwprivateIpAddress":"192.168.1.150",
    "serviceCidr":"10.0.0.0/24",
    "dnsServiceIP":"10.0.0.10",
    "dockerBridgeCidr":"172.17.0.1/24",
    "vNETName":"[concat('vnet_',parameters('namePostfix'))]",
    "vaultName":"[concat('vault_',parameters('namePostfix'),uniqueString(resourceGroup().id))]",
    "acrName":"[concat('acr_',parameters('namePostfix'),uniqueString(resourceGroup().id))]",
    "sbName":"[concat('sb_',parameters('namePostfix'),uniqueString(resourceGroup().id))]",
    "cacheName":"[concat('cache_',parameters('namePostfix'),uniqueString(resourceGroup().id))]",
    "cosmosdbName":"[concat('cosmos_',parameters('namePostfix'),uniqueString(resourceGroup().id))]",
    "databaseName":"[concat('DB_',parameters('namePostfix'))]",
    "serverName":"[concat('sql_',parameters('namePostfix'),uniqueString(resourcegroup().id))]",
    "appInsightsName":"[concat('appIns_',parameters('namePostfix'))]",
    "apimname":"[concat('apim_',parameters('namePostfix'))]",
    "applicationGatewayName":"[concat('appgw_',parameters('namePostfix'))]",
    "appgwPIPName":"[concat('appgwPIP_',parameters('namePostfix'))]",
    "bastionHostName":"[concat('bastion_',parameters('namePostfix'))]",
    "jumpName":"[concat('jumpbx_',parameters('namePostfix'))]",
    "gw_zone_name":"azure-api.net",
    "dev_zone_name":"developer.azure-api.net",
    "AksresourceName":"[concat('aksPrivate_',parameters('namePostfix'))]",
    "nodeResourceGroup":"[concat('aksPrivate_', parameters('namePostfix'),'_Resources')]",
    "resourceTag":"MSFT_POC"
  },
  "resources": [
    {
      "name": "deployVNET",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployVNETTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vNETName": {
            "value": "[variables('vNETName')]"
          },
          "addressRange": {
            "value": "[variables('addressRange')]"
          },
          "apimRange": {
            "value": "[variables('apimRange')]"
          },
          "aksRange": {
            "value": "[variables('aksRange')]"
          },
          "appgwRange": {
            "value": "[variables('appgwRange')]"
          },
          "sharedRange": {
            "value": "[variables('sharedRange')]"
          },
          "bastionRange": {
            "value": "[variables('bastionRange')]"
          },
          "privateEPRange": {
            "value": "[variables('privateEPRange')]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployLAWorkspace",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployLogAnalyticsURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[variables('workspaceName')]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployCosmosDb",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployLAWorkspace"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAzureCosmosDbURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cosmosdbName": {
            "value": "[variables('cosmosdbName')]"
          },
          "isZoneRedundant": {
            "value": "[parameters('isZoneRedundant')]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployCosmosDbPE",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployCosmosDb",
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPrivateEndpointURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "peName": {
            "value": "[concat(variables('cosmosdbName'),'_pe')]"
          },
          "resourceID": {
            "value": "[reference('deployCosmosDb').outputs.cosmosDbId.value]"
          },
          "vnetID": {
            "value": "[reference('deployVNET').outputs.vnetId.value]"
          },
          "groupID": {
            "value": "Sql"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deploySqlDb",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployLAWorkspace"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAzureSqlDbURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "collation": {
            "value": "SQL_Latin1_General_CP1_CI_AS"
          },
          "databaseName": {
              "value": "[variables('databaseName')]"
          },
          "tier": {
              "value": "GeneralPurpose"
          },
          "skuName": {
              "value": "GP_S_Gen5_24"
          },
          "maxSizeBytes": {
              "value": 1099511627776
          },
          "sampleName": {
              "value": ""
          },
          "serverName": {
              "value": "[variables('serverName')]"
          },
          "zoneRedundant": {
              "value": false
          },
          "licenseType": {
              "value": ""
          },
          "readScaleOut": {
              "value": "Disabled"
          },
          "numberOfReplicas": {
              "value": 0
          },
          "minCapacity": {
              "value": "3"
          },
          "autoPauseDelay": {
              "value": "180"
          },
          "enableADS": {
              "value": false
          },
          "enableVA": {
              "value": false
          },
          "useVAManagedIdentity": {
              "value": true
          },
          "administratorLogin": {
            "value": "[parameters('adminUsername')]"
          },
          "administratorLoginPassword": {
              "value": "[parameters('adminPassword')]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deploySqlServerPE",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deploySqlDb",
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPrivateEndpointURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "peName": {
            "value": "[concat(variables('serverName'),'_pe')]"
          },
          "resourceID": {
            "value": "[reference('deploySqlDb').outputs.sqlServerId.value]"
          },
          "vnetID": {
            "value": "[reference('deployVNET').outputs.vnetId.value]"
          },
          "groupID": {
            "value": "SqlServer"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployKeyVault",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployLAWorkspace"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployKeyVaultURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vaultName": {
            "value": "[variables('vaultName')]"
          },
          "workspaceID": {
            "value": "[reference('deployLAWorkspace').outputs.workspaceId.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployKeyVaultPE",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployKeyVault",
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPrivateEndpointURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "peName": {
            "value": "[concat(variables('vaultName'),'_pe')]"
          },
          "resourceID": {
            "value": "[reference('deployKeyVault').outputs.vaultId.value]"
          },
          "vnetID": {
            "value": "[reference('deployVNET').outputs.vnetId.value]"
          },
          "groupID": {
            "value": "vault"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployServiceBus",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployServiceBusURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sbName": {
            "value": "[variables('sbName')]"
          },
          "workspaceID": {
            "value": "[reference('deployLAWorkspace').outputs.workspaceId.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployServiceBusPE",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployServiceBus",
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPrivateEndpointURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "peName": {
            "value": "[concat(variables('sbName'),'_pe')]"
          },
          "resourceID": {
            "value": "[reference('deployServiceBus').outputs.sbId.value]"
          },
          "vnetID": {
            "value": "[reference('deployVNET').outputs.vnetId.value]"
          },
          "groupID": {
            "value": "namespace"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployACR",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployACRURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "acrName": {
            "value": "[variables('acrName')]"
          },
          "workspaceID": {
            "value": "[reference('deployLAWorkspace').outputs.workspaceId.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployACRPE",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployACR",
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPrivateEndpointURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "peName": {
            "value": "[concat(variables('acrName'),'_pe')]"
          },
          "resourceID": {
            "value": "[reference('deployACR').outputs.acrId.value]"
          },
          "vnetID": {
            "value": "[reference('deployVNET').outputs.vnetId.value]"
          },
          "groupID": {
            "value": "registry"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployAppInsights",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAppInsightsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[variables('appInsightsName')]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployAPIM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployVNET",
        "deployAppInsights",
        "deployLAWorkspace"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAPIMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "apimname": {
            "value": "[variables('apimName')]"
          },
          "sku": {
            "value": "[parameters('apimsku')]"
          },
          "capacity": {
            "value": "[parameters('apimcapacity')]"
          },
          "apimEmail": {
            "value": "[parameters('apimEmail')]"
          },
          "appinsightsID": {
            "value": "[reference('deployAppInsights').outputs.appInsightsID.value]"
          },
          "subnetID": {
            "value": "[reference('deployVNET').outputs.apimSubnetID.value]"
          },
          "loggerName":{
            "value": "[variables('appInsightsName')]"
          },
          "workspaceID": {
            "value": "[reference('deployLAWorkspace').outputs.workspaceId.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployGWDNSZone",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployAPIM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployDNSZoneTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "zone_name": {
            "value": "[variables('gw_zone_name')]"
          },
          "vnet_id": {
            "value": "[reference('deployVNET').outputs.vnetID.value]"
          },
          "recordname": {
            "value": "[variables('apimname')]"
          },
          "ipaddress": {
            "value": "[reference('deployAPIM').outputs.APIMIP.value[0]]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployDEVDNSZone",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployAPIM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployDNSZoneTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "zone_name": {
            "value": "[variables('dev_zone_name')]"
          },
          "vnet_id": {
            "value": "[reference('deployVNET').outputs.vnetID.value]"
          },
          "recordname": {
            "value": "[variables('apimname')]"
          },
          "ipaddress": {
            "value": "[reference('deployAPIM').outputs.APIMIP.value[0]]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "getSqlServerNICIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deploySqlServerPE"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('getNICIPUrL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicID": {
            "value": "[reference('deploySqlServerPE').outputs.nicID.value]"
          }
        }
      }
    },
    {
      "name": "deploySqlDbDNSZone",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "getSqlServerNICIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployDNSZoneTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "zone_name": {
            "value": "privatelink.database.windows.net"
          },
          "vnet_id": {
            "value": "[reference('deployVNET').outputs.vnetID.value]"
          },
          "recordname": {
            "value": "[variables('serverName')]"
          },
          "ipaddress": {
            "value": "[reference('getSqlServerNICIP').outputs.nicIP.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "getCosmosDbNICIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployCosmosDbPE"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('getNICIPUrL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicID": {
            "value": "[reference('deployCosmosDbPE').outputs.nicID.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployCosmosDbDNSZone",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "getCosmosDbNICIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployDNSZoneTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "zone_name": {
            "value": "privatelink.documents.azure.com"
          },
          "vnet_id": {
            "value": "[reference('deployVNET').outputs.vnetID.value]"
          },
          "recordname": {
            "value": "[variables('cosmosdbName')]"
          },
          "ipaddress": {
            "value": "[reference('getcosmosDbNICIP').outputs.nicIP.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "getVaultNICIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployKeyVaultPE"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('getNICIPUrL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicID": {
            "value": "[reference('deployKeyVaultPE').outputs.nicID.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployKeyVaultDNSZone",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "getVaultNICIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployDNSZoneTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "zone_name": {
            "value": "privatelink.vaultcore.azure.net"
          },
          "vnet_id": {
            "value": "[reference('deployVNET').outputs.vnetID.value]"
          },
          "recordname": {
            "value": "[variables('vaultName')]"
          },
          "ipaddress": {
            "value": "[reference('getVaultNICIP').outputs.nicIP.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "getServiceBusNICIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployServiceBusPE"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('getNICIPUrL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicID": {
            "value": "[reference('deployServiceBusPE').outputs.nicID.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployServiceBusDNSZone",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "getServiceBusNICIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployDNSZoneTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "zone_name": {
            "value": "privatelink.servicebus.windows.net"
          },
          "vnet_id": {
            "value": "[reference('deployVNET').outputs.vnetID.value]"
          },
          "recordname": {
            "value": "[variables('sbName')]"
          },
          "ipaddress": {
            "value": "[reference('getServiceBusNICIP').outputs.nicIP.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "getACRNICIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployACRPE"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('getNICIPUrL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "nicID": {
            "value": "[reference('deployACRPE').outputs.nicID.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployACRDNSZone",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "getACRNICIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployDNSZoneTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "zone_name": {
            "value": "privatelink.azure.io"
          },
          "vnet_id": {
            "value": "[reference('deployVNET').outputs.vnetID.value]"
          },
          "recordname": {
            "value": "[variables('acrName')]"
          },
          "ipaddress": {
            "value": "[reference('getACRNICIP').outputs.nicIP.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployAPPGW",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployVNET",
        "deployLAWorkspace"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAPPGWTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "applicationGatewayName": {
              "value": "[variables('applicationGatewayName')]"
          },
          "tier": {
              "value": "[parameters('appgwTier')]"
          },
          "skuSize": {
              "value": "[parameters('appgwSkuSize')]"
          },
          "capacity": {
              "value": "[parameters('appgwCapacity')]"
          },
          "subnetName": {
              "value": "appgw-sn"
          },
          "zones": {
              "value": "[parameters('appgwZones')]"
          },
          "publicIpAddressName": {
              "value": "[variables('appgwPIPName')]"
          },
          "sku": {
              "value": "[parameters('appgwSKU')]"
          },
          "allocationMethod": {
              "value": "static"
          },
          "publicIpZones": {
              "value": "[parameters('appgwpublicIPZones')]"
          },
          "privateIpAddress": {
              "value": "[variables('appgwPrivateIpAddress')]"
          },
          "autoScaleMaxCapacity": {
              "value": "[parameters('appgwAutoScaleMaxCapacity')]"
          },
          "subnetID": {
              "value": "[reference('deployVNET').outputs.appgwSubnetID.value]"
          },
          "apipool": {
            "value": "[concat(variables('apimname'),'.',variables('gw_zone_name'))]"
          },
          "devPool": {
            "value": "[concat(variables('apimname'),'.',variables('dev_zone_name'))]"
          },
          "workspaceID": {
            "value": "[reference('deployLAWorkspace').outputs.workspaceId.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployAzureBastion",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAzureBastionTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "resourceGroup": {
              "value": "[resourceGroup().name]"
          },
          "bastionHostName": {
              "value": "[variables('bastionHostName')]"
          },
          "subnetId": {
              "value": "[reference('deployVNET').outputs.bastionSubnetID.value]"
          },
          "publicIpAddressName": {
              "value": "[concat(variables('bastionHostName'),'-pip')]"
          },
          "workspaceID": {
            "value": "[reference('deployLAWorkspace').outputs.workspaceId.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployJumpBox",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployWindowsServerTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "subnetID": {
            "value": "[reference('deployVNET').outputs.sharedSubnetID.value]"
          },
          "virtualMachineName": {
            "value": "[variables('jumpName')]"
          },
          "virtualMachineSize": {
            "value": "[parameters('jumpSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sku": {
            "value": "[parameters('jumpSKU')]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "addJumpBoxInsights",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployJumpBox"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('addVMInsightsURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VmResourceId": {
            "value": "[reference('deployJumpBox').outputs.vmID.value]"
          },
          "osType": {
            "value": "Windows"
          },
          "WorkspaceResourceId": {
            "value": "[reference('deployLAWorkspace').outputs.workspaceId.value]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployAzureCacheVault",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployLAWorkspace",
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAzureCacheBusURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cacheName": {
            "value": "[variables('cacheName')]"
          },
          "workspaceID": {
            "value": "[reference('deployLAWorkspace').outputs.workspaceId.value]"
          },
          "subnetId": {
            "value": "[reference('deployVNET').outputs.epSubnetID.value]"
          },
          "ipAddress": {
            "value": "192.168.1.190"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    },
    {
      "name": "deployPrivateAKSCluster",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-05-01",
      "dependsOn": [
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAzureAKSTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "AksresourceName": {
            "value": "[variables('AksresourceName')]"
          },
          "location": {
              "value": "[resourceGroup().location]"
          },
          "nodeResourceGroup":{
            "value": "[variables('nodeResourceGroup')]"
          },
          "VNetName" : {
            "value": "[variables('vNETName')]"
          },
          "SubnetName" : {
            "value": "AKS-SN"
          },  
          "dnsPrefix": {
              "value": "[parameters('dnsPrefix')]"
          },
          "kubernetesVersion": {
              "value": "[parameters('kubernetesVersion')]"
          },
          "networkPlugin": {
              "value": "[parameters('networkPlugin')]"
          },
          "enableRBAC": {
              "value": "[parameters('enableRBAC')]"
          },
          "vmssNodePool": {
              "value": "[parameters('vmssNodePool')]"
          },
          "windowsProfile": {
              "value": "[parameters('windowsProfile')]"
          },
          "enablePrivateCluster": {
              "value": "[parameters('enablePrivateCluster')]"
          },
          "enableHttpApplicationRouting": {
              "value": "[parameters('enableHttpApplicationRouting')]"
          },
          "networkPolicy": {
              "value": "[parameters('networkPolicy')]"
          },
          "vnetSubnetID": {
              "value": "[reference('deployVNET').outputs.aksSubnetID.value]"
          },
          "serviceCidr": {
              "value": "[variables('serviceCidr')]"
          },
          "dnsServiceIP": {
              "value": "[variables('dnsServiceIP')]"
          },
          "dockerBridgeCidr": {
              "value": "[variables('dockerBridgeCidr')]"
          },
          "resourceTag":{
            "value":"[variables('resourceTag')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "IPAddress": {
      "type": "string",
      "value": "[reference('deployAPIM').outputs.APIMIP.value[0]]"
    }
  }
}